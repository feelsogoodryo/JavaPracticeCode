package h2Info;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

public class SampleDAO1 {
	//接続用の情報をフィールドに定数として定義
	// JDBC driver name and database URL 
	static final String JDBC_DRIVER = "org.h2.Driver";   
	static final String DB_URL = "jdbc:h2:tcp://localhost/C:\\\\\\\\data\\\\\\\\example1";  
	//  Database credentials 
	static final String USER = "sa"; 
	static final String PASS = "1234";
 	// データベース接続を行うメソッド
 	// データベース接続用定義を基にデータベースへ接続し、戻り値としてコネクション情報を返す
 	private static Connection getConnection(){
 		try{
 			Class.forName(JDBC_DRIVER);
 			Connection con = DriverManager.getConnection(DB_URL, USER, PASS);
 			return con;
 		}catch(Exception e){
 			e.printStackTrace();
 			throw new IllegalStateException(e);
 		}
 	}
 
 	// データベースからisbnデータの検索を行うメソッド
 	// テーブルに登録された全てのisbnデータをArrayListへ格納し、戻り値として返す
 	public ArrayList<String> selectIsbnAll(){
 
 		// 変数宣言
 		Connection con = null;	// DBコネクション
 		Statement smt = null;	// SQLステートメント
 
 		// 配列宣言
 		ArrayList<String> list = new ArrayList<String>();
 
 		// SQL文作成
 		String sql = "SELECT isbn FROM bookinfo ORDER BY isbn";
 
 		try{
 			// DBに接続
 			con = SampleDAO1.getConnection();
 			smt = con.createStatement();
 
 			// SQL文発行
 			ResultSet rs = smt.executeQuery(sql);
 
 			// 検索結果をArrayListに格納
 			while(rs.next()){
 				list.add(rs.getString("isbn"));
 			}
 
 		}catch(SQLException e){
 			System.out.println("Errorが発生しました！\n"+e);
 		}finally{
 			// リソースの開放
 			if(smt != null){
 				try{smt.close();}catch(SQLException ignore){}
 			}
 			if(con != null){
 				try{con.close();}catch(SQLException ignore){}
 			}
 		}
 		return list;
 	}
 
 	// データベースからtitleデータの検索を行うメソッド
 	// テーブルに登録された全てのtitleデータをArrayListへ格納し、戻り値として返す
 	public ArrayList<String> selectTitleAll(){
 		// 変数宣言
 		Connection con = null;	// DBコネクション
 		Statement smt = null;	// SQLステートメント
 
 		// 配列宣言
 		ArrayList<String> list = new ArrayList<String>();
 
 		// SQL文
  		String sql = "SELECT title FROM bookinfo ORDER BY isbn";
 
 		try{
 			// DBに接続
 			con = SampleDAO1.getConnection();
 			smt = con.createStatement();
 
 			// SQL文発行
 			ResultSet rs = smt.executeQuery(sql);
 
 			// 検索結果をArrayListに格納
 			while(rs.next()){
 				list.add(rs.getString("title"));
 			}
 
 		}catch(SQLException e){
 			System.out.println("Errorが発生しました！\n"+e);
 		}finally{
 			// リソースの開放
 			if(smt != null){
 				try{smt.close();}catch(SQLException ignore){}
 			}
  			if(con != null){
  				try{con.close();}catch(SQLException ignore){}
  			}
  		}
  		return list;
  	}
  
  	// データベースからpriceデータの検索を行うメソッド
  	// テーブルに登録された全てのpriceデータをArrayListへ格納し、戻り値として返す
  	public ArrayList<Integer> selectPriceAll(){
  		// 変数宣言
  		Connection con = null;	// DBコネクション
  		Statement smt = null;	// SQLステートメント
  
  		// 配列宣言
  		ArrayList<Integer> list = new ArrayList<Integer>();
  
  		// SQL文
   		String sql = "SELECT price FROM bookinfo ORDER BY isbn";
  
  		try{
  			// DBに接続
  			con = SampleDAO1.getConnection();
  			smt = con.createStatement();
  
  			// SQL文発行
  			ResultSet rs = smt.executeQuery(sql);
  
  			// 検索結果をArrayListに格納
  			while(rs.next()){
  				list.add(rs.getInt("price"));
  			}
  
  		}catch(SQLException e){
  			System.out.println("Errorが発生しました！\n"+e);
  		}finally{
  			// リソースの開放
  			if(smt != null){
  				try{smt.close();}catch(SQLException ignore){}
  			}
  			if(con != null){
  				try{con.close();}catch(SQLException ignore){}
  			}
  		}
  		return list;
  	}
  
  	// 書籍情報を登録するメソッド
  	// 引数に渡された書籍情報をデータベースへ登録し、戻り値として登録件数を返す
  	public int insertBook(String isbn, String title, int price){
  		// 変数宣言
  		Connection con = null;	// DBコネクション
  		Statement smt = null;	// SQLステートメント
  
  		int rowsCount = 0;
  
  		// SQL文
  		String sql = "INSERT INTO bookinfo(isbn,title,price) " +
  				"VALUES('" + isbn + "','" + title + "'," + price + ")";
  
  		try{
  			// DBに接続
  			con = SampleDAO1.getConnection();
  			smt = con.createStatement();
  
  			// SQL文発行
  			rowsCount = smt.executeUpdate(sql);
  
  		}catch(SQLException e){
  			System.out.println("Errorが発生しました！\n"+ e +"\n");
  		}finally{
  			// リソースの開放
  			if(smt != null){
  				try{smt.close();}catch(SQLException ignore){}
  			}
  			if(con != null){
  				try{con.close();}catch(SQLException ignore){}
  			}
  		}
  		return rowsCount;
  	}
}
